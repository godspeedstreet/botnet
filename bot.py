from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes, MessageHandler, filters, ConversationHandler
import os
from dotenv import load_dotenv

load_dotenv()

# –°–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
VALID_PROMO_CODES = ["TEST2024", "SPRING2024", "BOTNET50"]

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
ENTER_PROMO = 1

# –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_keyboard():
    keyboard = [
        [InlineKeyboardButton("BOTNETSN0S (–°–ù0–°)", callback_data="botnetsn0s")],
        [InlineKeyboardButton("üë§–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
        [InlineKeyboardButton("üìå–ö–∞–Ω–∞–ª", url="https://t.me/+RcVhLGySh7s0Y2Qy")],
        [InlineKeyboardButton("üìü–ú–∞–Ω—É–∞–ª", url="https://telegra.ph/SNOSER-FAQ-02-25")],
        [InlineKeyboardButton("üîë–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="promo")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_subscription_keyboard():
    keyboard = [
        [InlineKeyboardButton("üéÅ1 –ú–ï–°–Ø–¶ - 650–†/6.5$", callback_data="sub_1month")],
        [InlineKeyboardButton("üìò3 –ú–ï–°–Ø–¶–ê - 1200–†/12$", callback_data="sub_3month")],
        [InlineKeyboardButton("üîè–ù–ê–í–°–ï–ì–î–ê - 2800–†/28$", callback_data="sub_forever")],
        [InlineKeyboardButton("üîë–°–ö–†–ò–ü–¢–´ + –û–ë–£–ß–ï–ù–ò–ï + –•–û–°–¢ - 1200–†/12$", callback_data="sub_scripts")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_payment_keyboard():
    keyboard = [
        [InlineKeyboardButton("üí≥CARD/–ö–ê–†–¢–ê", callback_data="pay_card")],
        [InlineKeyboardButton("üí≥–Ø –æ–ø–ª–∞—Ç–∏–ª/–æ–ø–ª–∞—Ç–∏–ª–∞", callback_data="payment_done")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_subs")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_payment_details_keyboard():
    keyboard = [
        [InlineKeyboardButton("üí≥–Ø –æ–ø–ª–∞—Ç–∏–ª/–æ–ø–ª–∞—Ç–∏–ª–∞", callback_data="payment_done")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_payment")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_cancel_keyboard():
    keyboard = [
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_promo")]
    ]
    return InlineKeyboardMarkup(keyboard)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
        reply_markup=get_main_keyboard()
    )

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "botnetsn0s":
        await query.message.edit_text(
            "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:\n\n"
            "üì±–í—ã–±–∏—Ä–∞–µ—Ç–µ —Ç–∞—Ä–∏—Ñ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞:",
            reply_markup=get_subscription_keyboard()
        )
    
    elif query.data.startswith("sub_"):
        if query.data == "sub_1month":
            price = "650"
        elif query.data == "sub_3month":
            price = "1200"
        elif query.data == "sub_forever":
            price = "2800"
        elif query.data == "sub_scripts":
            price = "1200"
        
        context.user_data['selected_price'] = price
        await query.message.edit_text(
            "üì≤–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
            reply_markup=get_payment_keyboard()
        )
    
    elif query.data == "pay_card":
        price = context.user_data.get('selected_price', '650')  # Default to 650 if not set
        await query.message.edit_text(
            f"üñ•–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
            f"üì≤–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:\n\n"
            f"2200030550254883\n\n"
            f"üìü–ë–∞–Ω–∫: –ü–°–ë\n"
            f"üîã–°—É–º–º–∞: {price} RUB",
            reply_markup=get_payment_details_keyboard()
        )
    
    elif query.data == "payment_done":
        await query.message.edit_text(
            "üí≥–ï—Å–ª–∏ –≤—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ–ø–ª–∞—Ç–∏–ª–∏ –¥–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ\n\n"
            "-üì≤üì≤ @SN0SADMIN_BOT\n\n"
            "üíé–í–∞—à Id - –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∫—É –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –ë–î –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ - "
            "üõ°–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è - –º–∞–∫—Å–∏–º—É–º 3 —á–∞—Å–∞.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]])
        )
    
    elif query.data == "profile":
        await query.message.edit_text(
            f"üë§ –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
            f"üë§ –¢–≤–æ–π —é–∑–µ—Ä–Ω–µ–π–º: @{update.effective_user.username}\n"
            f"üÜî ID: {update.effective_user.id}\n\n"
            f"‚ùå –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç",
            reply_markup=get_main_keyboard()
        )
    
    elif query.data == "promo":
        await query.message.edit_text(
            "üîë –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:",
            reply_markup=get_cancel_keyboard()
        )
        return ENTER_PROMO
    
    elif query.data == "cancel_promo":
        await query.message.edit_text(
            "‚ùå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞",
            reply_markup=get_main_keyboard()
        )
        return ConversationHandler.END
    
    # Handle back buttons
    elif query.data == "back_to_main":
        await query.message.edit_text(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=get_main_keyboard()
        )
    
    elif query.data == "back_to_subs":
        await query.message.edit_text(
            "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:\n\n"
            "üì±–í—ã–±–∏—Ä–∞–µ—Ç–µ —Ç–∞—Ä–∏—Ñ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞:",
            reply_markup=get_subscription_keyboard()
        )
    
    elif query.data == "back_to_payment":
        await query.message.edit_text(
            "üì≤–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
            reply_markup=get_payment_keyboard()
        )

async def handle_promo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    promo_code = update.message.text.strip().upper()
    
    if promo_code in VALID_PROMO_CODES:
        await update.message.reply_text(
            "‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
            reply_markup=get_main_keyboard()
        )
    else:
        await update.message.reply_text(
            "‚ùå –¢–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            reply_markup=get_main_keyboard()
        )
    return ConversationHandler.END

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await start(update, context)

def main():
    app = Application.builder().token(os.getenv("BOT_TOKEN")).build()

    # –°–æ–∑–¥–∞–µ–º ConversationHandler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(button_callback, pattern="^promo$")],
        states={
            ENTER_PROMO: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_promo)],
        },
        fallbacks=[CallbackQueryHandler(button_callback, pattern="^cancel_promo$")],
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(conv_handler)
    app.add_handler(CallbackQueryHandler(button_callback))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("Bot started...")
    app.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main() 